@inject TimeProvider TimeProvider

<section id="graveyard">
    <FluentStack VerticalAlignment="VerticalAlignment.Center" VerticalGap="48" HorizontalAlignment="HorizontalAlignment.Center" HorizontalGap="64" Wrap>
        @foreach (var corpse in Corpses)
        {
            @CorpseTemplate(corpse)
        }
    </FluentStack>
</section>

@code {
    [Parameter]
    public IList<Corpse> Corpses { get; init; } = [];
    private static DateOnly _today = DateOnly.FromDateTime(TimeProvider.System.GetLocalNow().DateTime);

    private RenderFragment<Corpse> CorpseTemplate = (corpse) =>
        @<FluentCard class="corpse-card" MinimalStyle>
            <FluentStack class="corpse-header" HorizontalAlignment="HorizontalAlignment.Start">
                <FluentEmoji Value=@corpse.GetEmoji(_today) Width="88" class="corpse-img" />
                <FluentStack Orientation="Orientation.Vertical">
                    <h4 class="corpse-title">@corpse.GetFullName()</h4>
                    <em class="corpse-dates">@corpse.GetHeadstoneDates(_today)</em>
                </FluentStack>
                <FluentSpacer />
            <FluentAnchor Href="@corpse.Link" Target="_blank" Rel="noreferrer noopener"
                Appearance="Appearance.Stealth">
                    <FluentIcon Value="@(new Icons.Regular.Size16.News())" Color="Color.Neutral"/>
                </FluentAnchor>
            </FluentStack>

            <p class="corpse-text">@corpse.GetObituary(_today)</p>
        </FluentCard>;
}
