@page "/"
@inject IHttpClientFactory ClientFactory
@inject NavigationManager NavigationManager


<PageTitle>Microsoft Graveyard | In remembrance of those killed by Microsoft</PageTitle>

@if (isInitialized)
{
    <Graveyard Corpses=@_corpses />
}
else
{
    <GraveyardSkeleton />
}

@code {
    private bool isInitialized = false;
    private IList<Corpse> _corpses = [];

    protected override async Task OnInitializedAsync()
    {
        if (isInitialized)
        {
            return;
        }

        _corpses = await FetchCorpses();

        isInitialized = true;
    }

    internal async Task<IList<Corpse>> FetchCorpses()
    {
        var client = ClientFactory.CreateClient();
        client.BaseAddress = new Uri(NavigationManager.BaseUri);

        var response = await client.GetFromJsonAsync<CorpsesJson>("./data/corpses.json");

        return response?.Corpses.OrderByDescending(c => c.DeathDate).ToList() ?? [];
    }

    internal record CorpsesJson
    {
        public List<Corpse> Corpses { get; set; } = [];
    }
}
